__build_prompt() {
  if [ -z "$BUILD_BASE" ]; then
    return
  fi

  INFO="level:$BUILD_LEVEL type:$BUILD_TYPE"
  TITLE="\\[\\033]0;${BUILD_LEVEL} ${BUILD_TYPE}\\007"

  if [ "$BUILD_APP" != "browser" ]; then
    INFO="$INFO app:$BUILD_APP"
  fi

  if [ "$BUILD_TARGET" != "$BUILD_PLATFORM" ]; then
    INFO="$INFO target:$BUILD_TARGET"
  fi

  if [ "$BUILD_CHANNEL" != "default" ]; then
    INFO="$INFO channel:$BUILD_CHANNEL"
  fi

  if [ "$BUILD_SOURCE" != "trunk" ]; then
    INFO="$INFO source:$BUILD_SOURCE"
  fi

  echo $INFO
}

set_env() {
  sed -i "/$1=/d" $BUILD_BASE/.env
  echo "$1=\"$2\"" >> $BUILD_BASE/.env
}

build_app() {
  set_env BUILD_APP ${1:-browser}
}

build_source() {
  set_env BUILD_SOURCE ${1:-trunk}
}

build_level() {
  set_env BUILD_LEVEL ${1:-opt}
}

build_type() {
  set_env BUILD_TYPE ${1:-artifact}
}

build_target() {
  set_env BUILD_TARGET ${1:-$BUILD_PLATFORM}
}

build_channel() {
  set_env BUILD_CHANNEL ${1:-default}
}

if [ ! -f "$BUILD_BASE/.env" ]; then
  build_app
  build_source
  build_level
  build_type
  build_target
  build_channel
fi

export BUILDRC_RUN=1

if [ ! -z "$PROMPT_START" ]; then
  export PS1="${PROMPT_START} \[\e[1;33m\]\$(__build_prompt)\[\e[0m\]${PROMPT_END}${TITLE}"
else
  export PS1="\[\e[1;33m\]\$(__build_prompt)\[\e[0m\]\n$DEFAULT_PROMPT${TITLE}"
fi

INNER_ENV=$(mise -C "$BUILD_BASE/source" x -- env | grep ^BUILD_SOURCE=)
eval "$INNER_ENV"
mkdir -p "$BUILD_BASE/source/${BUILD_SOURCE:-trunk}"
cd $BUILD_BASE/source/${BUILD_SOURCE:-trunk}

# alias moz-phab=$BUILD_BASE/bin/moz-phab
